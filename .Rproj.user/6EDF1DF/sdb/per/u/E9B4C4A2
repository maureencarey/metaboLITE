{
    "collab_server" : "",
    "contents" : "sbml_model = rsbml_read(\"saved_SBML_toycon.xml\")\ntoycon_graph = igraph.from.graphNEL(rsbml_graph(rsbml_read(\"saved_SBML_toycon.xml\")))\nnet = asNetwork(toycon_graph)\nnames = unlist(net$val)[seq(2, length(unlist(net$val)), 2)]\nedges_names = names\n\nfor (i in seq(1, length(names))) {\n  if (any(names(sbml_model@model@species) == as.character(names[i]))) {\n    metabolite_name = sbml_model@model@species[[which(names(sbml_model@model@species) == as.character(names[i]))]]@name\n    compartment = sbml_model@model@species[[which(names(sbml_model@model@species) == as.character(names[i]))]]@compartment\n    metabolite = paste(metabolite_name, compartment, sep = \"_\")\n    edges_names[i] = metabolite\n  }\n  else{\n    if(any(names(sbml_model@model@reactions) == as.character(names[i]))){\n      reaction_name = sbml_model@model@reactions[[which(names(sbml_model@model@reactions) == as.character(names[i]))]]@name\n      splitted = strsplit(x = reaction_name,split = \" \")[[1]]\n      reaction = paste(splitted[1],splitted[2],sep = \"_\")\n      edges_names[i] = reaction\n    }\n    else{\n      edges_names[i] = \"NoName\"\n    }\n  }\n}\n\n\nquantize <- function(data, no_of_groups){\n  max(data)\n  return(object)\n}",
    "created" : 1504878660720.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2789587025",
    "id" : "E9B4C4A2",
    "lastKnownWriteTime" : 0,
    "last_content_update" : 1505232221822,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}